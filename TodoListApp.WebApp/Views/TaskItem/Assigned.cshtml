@model TodoListApp.WebApi.Models.ViewModels.AssignedTasksViewModel
@using TaskStatus = TodoListApp.Common.TaskStatus;

@{
	ViewData["Title"] = "Assigned Tasks";
}

<div class="container my-5">
	<div class="card todo-card shadow border-0">
		<div class="card-header bg-white py-3">
			<div class="d-flex justify-content-between align-items-center">
				<h1 class="card-title fs-3 mb-0">@ViewData["Title"]</h1>
			</div>
		</div>
		<div class="card-body">
			<form method="get" asp-action="Assigned" class="mb-4 p-3 bg-light rounded">
				<input type="hidden" name="userId" value="@Model.UserId" />
				<div class="row mb-3">
					<div class="col-md-8">
						<div class="input-group">
							<input type="text" name="searchString" id="searchString" class="form-control"
								   value="@Model.SearchString" placeholder="Search tasks..." />
							<button type="submit" class="btn btn-primary">
								<i class="bi bi-search me-1"></i> Search
							</button>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-4 mb-3">
						<label for="status" class="form-label fw-medium">Status Filter</label>
						<select name="status" id="status" class="form-select" onchange="this.form.submit()">
							<option value="" selected="@(Model.Status == null)">All Statuses</option>
							<option value="NotStarted" selected="@(Model.Status == "NotStarted")">Not Started</option>
							<option value="InProgress" selected="@(Model.Status == "InProgress")">In Progress</option>
							<option value="Completed" selected="@(Model.Status == "Completed")">Completed</option>
						</select>
					</div>
					<div class="col-md-4 mb-3">
						<label for="sortBy" class="form-label fw-medium">Sort By</label>
						<select name="sortBy" id="sortBy" class="form-select" onchange="this.form.submit()">
							<option value="name" selected="@(Model.SortBy?.ToLower() == "name")">Task Name</option>
							<option value="duedate" selected="@(Model.SortBy?.ToLower() == "duedate")">Due Date</option>
						</select>
					</div>
					<div class="col-md-4 mb-3">
						<label for="sortOrder" class="form-label fw-medium">Sort Order</label>
						<select name="sortOrder" id="sortOrder" class="form-select" onchange="this.form.submit()">
							<option value="asc" selected="@(Model.SortOrder?.ToLower() == "asc")">Ascending</option>
							<option value="desc" selected="@(Model.SortOrder?.ToLower() == "desc")">Descending</option>
						</select>
					</div>
				</div>
			</form>

			@if (!Model.Tasks.Any())
			{
				<div class="alert alert-info d-flex align-items-center" role="alert">
					<i class="bi bi-info-circle-fill me-2 fs-4"></i>
					<div>
						No tasks match your current filters. Try adjusting your search criteria or create a new task.
					</div>
				</div>
			}
			else
			{
				<div class="table-responsive">
					<table class="table table-hover border">
						<thead class="table-light">
							<tr>
								<th>Title</th>
								<th>Due Date</th>
								<th>Status</th>
								<th class="text-center">Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var task in Model.Tasks)
							{
								<tr class="@(task.DueDate < DateTime.Now && task.Status != TaskStatus.Completed ? "task-overdue" : "")">
									<td class="align-middle fw-medium">@task.Title</td>
									<td class="align-middle">
										<span class="@(task.DueDate < DateTime.Now && task.Status != TaskStatus.Completed ? "text-danger" : "")">
											<i class="bi bi-calendar-event me-1"></i>
											@task.DueDate.ToString("MMM dd, yyyy HH:mm")
										</span>
									</td>
									<td class="align-middle">
										<form asp-action="Assigned" method="post" class="d-inline">
											<input type="hidden" name="id" value="@task.Id" />
											<select name="status" class="form-select form-select-sm" onchange="this.form.submit()">
												<option value="NotStarted" selected="@(task.Status == TaskStatus.NotStarted)">
													<i class="bi bi-circle"></i> Not Started
												</option>
												<option value="InProgress" selected="@(task.Status == TaskStatus.InProgress)">
													<i class="bi bi-hourglass-split"></i> In Progress
												</option>
												<option value="Completed" selected="@(task.Status == TaskStatus.Completed)">
													<i class="bi bi-check-circle"></i> Completed
												</option>
											</select>
										</form>
									</td>
									<td class="text-center">
										<a asp-action="Details" asp-route-id="@task.Id" class="btn btn-info btn-sm">
											<i class="bi bi-eye"></i> View Details
										</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
		</div>
	</div>
</div>
