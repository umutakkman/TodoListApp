@model TodoListApp.WebApi.Models.ApiModels.TaskItemWebApiModel
@using TodoListApp.WebApi.Models.ApiModels;
@using TodoListApp.Common;

@{
	ViewData["Title"] = "Edit Task Item";
}

<div class="container my-5">
	<div class="card todo-card shadow border-0">
		<div class="card-header bg-white py-3">
			<div class="d-flex justify-content-between align-items-center">
				<h1 class="card-title fs-3 mb-0">@ViewData["Title"]</h1>
				<a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">
					<i class="bi bi-arrow-left me-1"></i> Back to Details
				</a>
			</div>
		</div>
		<div class="card-body">
			<div class="row">
				<div class="col-lg-6">
					<div class="card mb-4">
						<div class="card-header bg-light">
							<h3 class="card-title fs-5 mb-0">Task Information</h3>
						</div>
						<div class="card-body">
							<form asp-action="Edit" method="post">
								<input type="hidden" asp-for="Id" />
								<input type="hidden" asp-for="TodoListId" />
								<input type="hidden" asp-for="UserId" />

								<div class="form-group mb-3">
									<label asp-for="Title" class="form-label fw-medium">Title</label>
									<input asp-for="Title" class="form-control" placeholder="Enter task title" />
									<span asp-validation-for="Title" class="text-danger"></span>
								</div>

								<div class="form-group mb-3">
									<label asp-for="Description" class="form-label fw-medium">Description</label>
									<textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter task description"></textarea>
									<span asp-validation-for="Description" class="text-danger"></span>
								</div>

								<div class="form-group mb-3">
									<label asp-for="DueDate" class="form-label fw-medium">Due Date</label>
									<div class="input-group">
										<span class="input-group-text"><i class="bi bi-calendar"></i></span>
										<input asp-for="DueDate" type="datetime-local" class="form-control" />
									</div>
									<span asp-validation-for="DueDate" class="text-danger"></span>
								</div>

								<div class="form-group mb-4">
									<label asp-for="Status" class="form-label fw-medium">Status</label>
									<select asp-for="Status" class="form-select">
										<option value="NotStarted">Not Started</option>
										<option value="InProgress">In Progress</option>
										<option value="Completed">Completed</option>
									</select>
									<span asp-validation-for="Status" class="text-danger"></span>
								</div>

								<div class="form-group">
									<button type="submit" class="btn btn-primary w-100">
										<i class="bi bi-check-circle me-1"></i> Save Changes
									</button>
								</div>
							</form>
						</div>
					</div>
				</div>

				<div class="col-lg-6">
					<div class="card mb-4">
						<div class="card-header bg-light">
							<h3 class="card-title fs-5 mb-0">Tags</h3>
						</div>
						<div class="card-body">
                            <h5 class="fs-6 text-muted mb-2">Current Tags</h5>
                            @if (Model.Tags != null && Model.Tags.Any())
                            {
                                <div class="d-flex flex-wrap gap-2 mb-3">
                                    @foreach (var tag in Model.Tags)
                                    {
                                        <div class="d-flex align-items-center p-2">
                                            <span class="tag-pill me-2">
                                                <i class="bi bi-tag-fill"></i>@tag.Name
                                            </span>
                                            <form asp-action="RemoveTag" method="post" class="d-inline">
                                                <input type="hidden" name="taskId" value="@Model.Id" />
                                                <input type="hidden" name="tagId" value="@tag.Id" />
                                                <button type="submit" class="btn btn-sm btn-danger">
                                                    <i class="bi bi-x"></i>
                                                </button>
                                            </form>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted mb-3">No tags assigned.</p>
                            }
							<h5 class="fs-6 text-muted mb-2">Add a Tag</h5>
							<form asp-action="AddTag" method="post" class="row g-2">
								<input type="hidden" name="taskId" value="@Model.Id" />
								<div class="col-8">
									<select name="tagId" id="tagId" class="form-select" required>
										<option value="">-- Select Tag --</option>
										@if (ViewBag.AvailableTags != null)
										{
											foreach (var tag in (IEnumerable<TagWebApiModel>)ViewBag.AvailableTags)
											{
												<option value="@tag.Id">@tag.Name</option>
											}
										}
									</select>
								</div>
								<div class="col-4">
									<button type="submit" class="btn btn-primary w-100">Add</button>
								</div>
							</form>
						</div>
					</div>

					<div class="card">
						<div class="card-header bg-light">
							<h3 class="card-title fs-5 mb-0">Comments</h3>
						</div>
						<div class="card-body">
							<h5 class="fs-6 text-muted mb-2">Existing Comments</h5>
							@if (Model.Comments != null && Model.Comments.Any())
							{
								<ul class="list-group list-group-flush mb-3">
									@foreach (var comment in Model.Comments)
									{
										<li class="list-group-item px-0">
											<div class="d-flex justify-content-between">
												<div>
													<p class="mb-1">@comment.Text</p>
													<small class="text-muted">
														<i class="bi bi-clock me-1"></i>
														@comment.CreationDate.ToString("MMM dd, yyyy HH:mm")
													</small>
												</div>
												<div class="d-flex align-items-start">
													<a asp-action="EditComment" asp-route-taskId="@Model.Id" asp-route-commentId="@comment.Id"
													   class="btn btn-sm btn-outline-primary me-1">
														<i class="bi bi-pencil">Edit Comment</i>
													</a>
													<form asp-action="RemoveComment" method="post" class="d-inline">
														<input type="hidden" name="taskId" value="@Model.Id" />
														<input type="hidden" name="commentId" value="@comment.Id" />
														<button type="submit" class="btn btn-sm btn-outline-danger">
															<i class="bi bi-trash">Delete Comment</i>
														</button>
													</form>
												</div>
											</div>
										</li>
									}
								</ul>
							}
							else
							{
								<p class="text-muted mb-3">No comments available.</p>
							}

							<h5 class="fs-6 text-muted mb-2">Add New Comment</h5>
							<form asp-action="AddComment" method="post" class="row g-2">
								<input type="hidden" name="taskId" value="@Model.Id" />
								<div class="col-8">
									<input type="text" id="commentText" name="Text" class="form-control"
										   placeholder="Enter your comment" required />
								</div>
								<div class="col-4">
									<button type="submit" class="btn btn-primary w-100">Add</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
